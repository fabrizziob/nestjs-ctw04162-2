name: Final CICD Pipeline

# on:
#   push:
#     branches:
#       - main

on: workflow_dispatch

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  os_matrix:
    name: Application Setup
    strategy:
      matrix:
        os: [ubuntu-latest]
        version: [16, 18, 20]
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
    
      - name: Setup Node.Js Env
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: ${{ matrix.version }}
          cache: 'npm'  # NPM Caching for faster dependency installs.
    
    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      # - name: Cache node modules
      #   id: cache-npm
      #   uses: actions/cache@v4
      #   env:
      #       cache-name: cache-node-modules
      #   with:
      #       # npm cache files are stored in `~/.npm` on Linux/macOS
      #       path: ~/.npm
      #       key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #       restore-keys: |
      #           ${{ runner.os }}-build-${{ env.cache-name }}-
      #           ${{ runner.os }}-build-
      #           ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Perform a clean install of dependencies
        run: npm ci
        
      - name: Build the application
        run: npm run build

      - name: Test the application
        run: npm test
      
      - name: Lint the application
        run: npm run lint

      - name: Audit the application
        run: npm audit
      
      - name: Archive production artifacts
        uses: actions/upload-pages-artifact@0252fc4ba7626f0298f0cf00902a25c6afc77fa8 # v3.0.0
        with:
          name: Build-${{ matrix.os }}-dist-${{ github.ref_name }}-${{ matrix.version }}
          path: dist
          retention-days: 3
      
      # - name: Download production artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: Build-${{ matrix.os }}-dist-${{ github.ref_name }}-${{ matrix.version }}
      #     path: build
  
  deploy_ghpage:
    name: Deploy GH Pages
    runs-on: ubuntu-latest
    needs: os_matrix
    if: github.ref == 'refs/heads/master' && needs.os_matrix.result == 'success'

    strategy:
      matrix:
        os: [ubuntu-latest]
        version: [16, 18, 20]

    permissions:
      pages: write
      id-token: write

    environment:
      # environment created automatically by GitHub
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      
      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@1f0c5cde4bc74cd7e1254d0cb4de8d49e9068c7d # v4.0.0
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@decdde0ac072f6dcbe43649d82d9c635fff5b4e4 # v4.0.4
        with: 
          artifact_name: Build-${{ matrix.os }}-dist-${{ github.ref_name }}-${{ matrix.version }}
    

  discord_notification:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: 
      - os_matrix
      - deploy_ghpage
    if: github.ref == 'refs/heads/master' && (needs.deploy_ghpage.result == 'success' || needs.deploy_ghpage.result == 'skipped')

    steps:
      - name: Successfully deployed notification
        uses: rjstone/discord-webhook-notify@74f8f9dbf15fa2658b169bbcd7c1d6e97bd77021 #v1.1.1
        if: success()
        with:
          severity: info
          details: The deployment of Github Page was successful!!!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
    